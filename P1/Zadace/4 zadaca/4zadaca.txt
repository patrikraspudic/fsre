1. zadatak

1. **Deklaracija funkcija**: Na početku koda deklarirane su tri funkcije: `unos`, `je_mali_samoglasnik` i `mali_samoglasnik`. Ove deklaracije omogućuju kompajleru da zna o postojanju ovih funkcija prije nego što se one definiraju.

2. **Funkcija main**: Ova funkcija je početna točka svakog C programa. U ovoj funkciji, prvo se deklarira niz od 5 znakova. Zatim se poziva funkcija `unos` koja popunjava ovaj niz. Nakon toga, poziva se funkcija `mali_samoglasnik` koja broji male samoglasnike u nizu.

3. **Funkcija unos**: Ova funkcija prima niz znakova kao argument. Korisniku se traži da unese 5 slova. Svako slovo se dodaje u niz samo ako je slovo (veliko ili malo). Ova funkcija se ponavlja dok se ne unese 5 slova.

4. **Funkcija je_mali_samoglasnik**: Ova funkcija provjerava je li dani znak mali samoglasnik. Ako jest, vraća 1, inače vraća 0.

5. **Funkcija mali_samoglasnik**: Ova funkcija prolazi kroz svaki znak u nizu i povećava brojač svaki put kada naiđe na mali samoglasnik. Na kraju, ispisuje broj malih samoglasnika.

-------------------------------------------------------------------------------------------------------------

2. zadatak


1. `void ispis_manjih_od_prosjeka(float niz[100], int i, float zbroj);`: Ovo je deklaracija funkcije koja će biti definirana kasnije. Funkcija prima tri argumenta: niz brojeva, broj elemenata u nizu (i) i zbroj svih elemenata u nizu.

2. `int main() { ... }`: Ovo je glavna funkcija programa. Izvršavanje programa počinje od ove funkcije.

3. `float niz[100];`: Ovo je deklaracija niza koji može sadržavati do 100 decimalnih brojeva.

4. `int i = 0;`: Ovo je brojač koji se koristi za praćenje koliko je brojeva uneseno.

5. `float zbroj = 0;`: Ovo je varijabla koja se koristi za praćenje zbroja svih unesenih brojeva.

6. `printf("Unesite neki broj: "); scanf_s(" %f", &niz[i]); zbroj += niz[i]; i++;`: Ovaj blok koda traži od korisnika da unese broj, dodaje taj broj u niz, dodaje taj broj na zbroj i povećava brojač.

7. `do { ... } while (!(niz[i - 1] > (zbroj - niz[i - 1])));`: Ova petlja se izvršava dok korisnik ne unese broj koji je veći od trenutnog prosjeka svih prethodno unesenih brojeva.

8. `ispis_manjih_od_prosjeka(niz, i, zbroj);`: Ova linija poziva funkciju koja ispisuje sve brojeve iz niza koji su manji od prosjeka.

9. `void ispis_manjih_od_prosjeka(float niz[100], int i, float zbroj) { ... }`: Ovo je definicija funkcije koja ispisuje sve brojeve iz niza koji su manji od prosjeka. Izračunava prosjek, prolazi kroz svaki element niza i ispisuje one koji su manji od prosjeka.

------------------------------------------------------------------------------------------------------------

3. zadatak


1. **Funkcija `unos(int niz[7])`**: Ova funkcija uzima kao ulazni parametar niz od 7 cijelih brojeva. U petlji `for`, korisniku se traži da unese 7 brojeva. Svaki broj se dodaje u niz i zbraja se sa prethodnim zbrojem. Na kraju, funkcija vraća ukupan zbroj svih brojeva u nizu.

2. **Funkcija `izracunaj_prosjek(int zbroj)`**: Ova funkcija uzima zbroj brojeva kao ulazni parametar. Izračunava prosjek tako što zbroj podijeli sa 7.0 (broj elemenata u nizu) i vraća taj prosjek.

3. **Funkcija `pronadji_najdalji(int niz[7], float prosjek)`**: Ova funkcija uzima niz brojeva i njihov prosjek kao ulazne parametre. Prvo izračunava apsolutnu razliku između prosjeka i prvog broja u nizu. Zatim prolazi kroz ostatak niza i za svaki broj izračunava apsolutnu razliku između tog broja i prosjeka. Ako je ta razlika veća od trenutno najveće razlike, ažurira najveću razliku i indeks tog broja. Na kraju, ispisuje prosjek, broj koji je najdalje od prosjeka, i razliku između tog broja i prosjeka.

4. **Funkcija `main()`**: Ova je funkcija početna točka programa. Prvo poziva funkciju `unos(int niz[7])` da bi dobila zbroj brojeva. Zatim koristi taj zbroj da bi izračunala prosjek pomoću funkcije `izracunaj_prosjek(int zbroj)`. Na kraju, koristi niz brojeva i prosjek da bi pronašla broj koji je najdalje od prosjeka pomoću funkcije `pronadji_najdalji(int niz[7], float prosjek)`.

-------------------------------------------------------------------------------------------------------------

4. zadatak


1. **Funkcija `unos_i_ispis()`**: Ova funkcija ne prima nikakve ulazne parametre. Prvo, deklarira niz od 11 znakova i brojač koji je niz od 256 cijelih brojeva. Svi elementi brojača su inicijalizirani na 0.

2. Korisniku se zatim traži da unese 11 znakova. Svaki znak se dodaje u niz, a vrijednost brojača za taj znak se povećava za 1. Ovo se postiže pomoću linije `brojac[niz[i]]++`.

3. Nakon što su svi znakovi uneseni, funkcija prolazi kroz sve moguće ASCII vrijednosti (od 0 do 255). Za svaku vrijednost, provjerava se da li se odgovarajući znak pojavljuje točno tri puta u unesenom nizu (tj. da li je `brojac[i] == 3`) i da li je taj znak slovo (bilo malo ili veliko). Ako je to slučaj, taj se znak ispisuje.

4. **Funkcija `main()`**: Ova je funkcija početna točka programa. Jedina stvar koju ova funkcija radi je pozivanje funkcije `unos_i_ispis()`.

-------------------------------------------------------------------------------------------------------------

5. zadatak


1. **Funkcija `main()`**: Ova je funkcija početna točka programa. Prvo, deklarira niz od pet elemenata tipa `float` i varijablu `cetvrti` tipa `float`. Zatim traži od korisnika da unese pet realnih brojeva koji se zatim pohranjuju u niz. Nakon toga, poziva funkciju `sortiraj` koja sortira niz u silaznom redoslijedu. Zatim, poziva funkciju `cetvrti_po_velicini` koja vraća četvrti element sortiranog niza. Na kraju, poziva funkciju `ispis` koja ispisuje četvrti element niza određen broj puta.

2. **Funkcija `sortiraj(float niz[], int velicina)`**: Ova funkcija sortira niz u silaznom redoslijedu koristeći algoritam mjehuričastog sortiranja.

3. **Funkcija `cetvrti_po_velicini(float niz[], int velicina)`**: Ova funkcija vraća četvrti element sortiranog niza.

4. **Funkcija `ispis(float broj)`**: Ova funkcija ispisuje četvrti element niza određen broj puta. Broj puta je jednak cijelom dijelu četvrtog elementa. 

